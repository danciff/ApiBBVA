import requests
from requests.auth import HTTPDigestAuth
import json
import urllib
import httplib
import pandas as pd
import matplotlib.pyplot as plt

#qparams = {'group_by=month&max_date=201510&min_date=201501'}
qparams = {}
parqparams = urllib.urlencode(qparams)

conn = httplib.HTTPSConnection('apis.bbva.com')

headers = {}
headers["Accept-Language"] = "es"
headers["Accept"] = "application/json"
headers["Authorization"] = "jwt eyJ6aXAiOiJERUYiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.dmNbLwRecZQ8DsMkzDMn7nVeJPGGsS3rLU4TxMHP9_KCHXaoIkOs8irrx3WejlUJlJ-SfuOeG415smBy264EuxkiEqgGU4pVaB2GEgtr7FfY3SJ2198VuCW4Vb07juFRJxXY7fnviCp2ycvIrPCb-H6EDylol7bS_d_OE7dbtNfvIbgbqBQYWpsXBihQTKKUeX1Zdxgcd6Vu8G-4VdD1wRbIQdN2LwH1wwSAnWkp_s8LMYt92HEV45qNo7JgP8jM0TXL3OR5hUR48MbzmquFdDuzCWrbxiUXlb3auFQ6H-sUgnWjbEvsmrX-MEVAXhnHuD29JDjqr319t16IqsEEHA.L35L2FRzWLOwEEbK.ozzPpxxK6dKJ4VNPCpG5XLCdBcTK6YYZMTijSWPTFfv-G5bQKOSkBH0hFAXmeftwT9J4Qeiq6S2RIPCK4G3ZTz_s6IemcPczqj2uzjq_GyGQrjxkERfKAsAaZmubI6O-nt93Il7khFJXnK-Y_5l9RU3wt3AvYhG7N0f0ysrIaFn2v3abf1GfVJtbAwnYwUfQKxU4heKyd6DqmS2QARnzgXCRUkAP8jr91sk2AEuLV4bcvyDq6Yt_ymxJmxg.tbM5RhKlH41tnwJK71d3Aw"

conn.request('GET', '/paystats_sbx/4/zipcodes/28029/destination_distribution?destination_type=zipcodes&cards=bbva&max_date=201512&min_date=201501', None, headers)
#conn.request('GET', '/paystats_academic/3/info/merchants_categories?%s'%parqparams, None, headers)

r = conn.getresponse()
#data= r.read()
data=json.loads(r.read())
#print data
print r.status, r.read(),data
#data2 = json.loads(data)



In [27]:

fecha=[]
zipcode=[]
cards=[]
avg=[]
merch=[]
txs=[]

for i in range(len(data['data'])):
    #fecha.append(data['data'][i]['date'])
    for a in range(len(data['data'][i]['zipcodes'])):
        fecha.append(data['data'][i]['date'])
        if a<(len(data['data'][i]['zipcodes'])-1):
            zipcode.append(data['data'][i]['zipcodes'][a]['id'])
        else:
            zipcode.append(0)
        if a<(len(data['data'][i]['zipcodes'])-1):
            cards.append(data['data'][i]['zipcodes'][a]['cards'])
        else:
            cards.append(0)
        avg.append(data['data'][i]['zipcodes'][a]['avg'])
        if a<(len(data['data'][i]['zipcodes'])-1):
            merch.append(data['data'][i]['zipcodes'][a]['merchants'])
        else:
            merch.append(0)
        txs.append(data['data'][i]['zipcodes'][a]['txs'])
fecha=[]
zipcode=[]
cards=[]
avg=[]
merch=[]
txs=[]
​
for i in range(len(data['data'])):
    #fecha.append(data['data'][i]['date'])
    for a in range(len(data['data'][i]['zipcodes'])):
        fecha.append(data['data'][i]['date'])
        if a<(len(data['data'][i]['zipcodes'])-1):
            zipcode.append(data['data'][i]['zipcodes'][a]['id'])
        else:
            zipcode.append(0)
        if a<(len(data['data'][i]['zipcodes'])-1):
            cards.append(data['data'][i]['zipcodes'][a]['cards'])
        else:
            cards.append(0)
        avg.append(data['data'][i]['zipcodes'][a]['avg'])
        if a<(len(data['data'][i]['zipcodes'])-1):
            merch.append(data['data'][i]['zipcodes'][a]['merchants'])
        else:
            merch.append(0)
        txs.append(data['data'][i]['zipcodes'][a]['txs'])
In [28]:

d_dest = pd.DataFrame()
d_dest['Fecha']=fecha
d_dest['Codigo Postal']=zipcode
d_dest['Nº Tarjetas']=cards
d_dest['Compra Media']=avg
d_dest['Establecimientos']=merch
d_dest['Txs']=txs
d_dest['Venta Total']=d_dest['Compra Media']*d_dest['Txs']
d_dest



In [29]:

d_dest['Fecha'] = d_dest['Fecha'].astype(int)
d_dest['Codigo Postal'] = d_dest['Codigo Postal'].astype(int)
#d_cat


g_dest=d_dest.groupby('Fecha').apply(sum)
g_dest['Venta Media Mes']=g_dest['Venta Total']/12
g_dest

g_dest=d_dest.groupby(['Codigo Postal','Fecha']).apply(sum)
g_dest = g_dest[g_dest['Codigo Postal']!=0]
g_dest

v_mad=0

for a in g_dest['Codigo Postal']:
    if a>28000 and a<28088:
        v_mad = v_mad + g_dest[g_dest['Codigo Postal']==a]['Venta Total'].sum()
        
print 'Ventas Madrid: ' +str(v_mad)

v_com=0

for a in g_dest['Codigo Postal']:
    if a>28000 and a<28992:
        v_com = v_com + g_dest[g_dest['Codigo Postal']==a]['Venta Total'].sum()
        
print 'Ventas Comunidad: ' +str(v_com)

v_fuera=0

for a in g_dest['Codigo Postal']:
    if a<28001 or a>280991:
        v_fuera = v_fuera + g_dest[g_dest['Codigo Postal']==a]['Venta Total'].sum()
        
print 'Ventas Fuera: ' +str(v_fuera)
venta = v_mad+v_com+v_fuera
print 'Ventas Totales: ' +str(venta)

por_m= v_mad*100/venta
por_c= v_com*100/venta
por_f= v_fuera*100/venta


g_destzip = d_dest.groupby('Codigo Postal').apply(sum)
g_destzip = g_destzip[g_destzip['Codigo Postal']!=0]
g_destzip = g_destzip.sort('Venta Total',ascending=False)
g_destzip

    
uni=g_destzip[0:10].index.values
#uni=g_destzip.Categoria.unique()
#g_cat=d_cat.groupby(['Categoria','Fecha']).apply(sum)
x=[]
y=[]

z = pd.DataFrame()
for a in uni:
    por = g_destzip['Venta Total'][a]*100/venta
    y.append(por)
    x.append(a)

x.append('Madrid Capital')
y.append(por_m)

x.append('Comunidad de Madrid')
y.append(por_c)

x.append('Fuera de Madrid')
y.append(por_f)


    
z['Codigo Postal']=x
z['Porcentaje Ventas']=y
print x
print y
print z

import pandas as pd
import numpy as np
#y = d_cat[d_cat['Categoria']==a]['Venta Total']
#x = d_cat[d_cat['Categoria']==a]['Fecha']
plt.plot(np.arange(len(x)), y)  # Dibujamos el gráfico de barras
#plt.ylim(550,650)  # Limitamos los valores del eje y al range definido [450, 550]
#plt.title('Ventas de '+a)  # Colocamos el título
plt.xticks(np.arange(len(x)), x, rotation = 90)  # Colocamos las etiquetas del eje x, en este caso, las fechas
#plt.savefig("C:/Users/Carlos/Desktop/TFM/graficos/ven_cat_cat/ven_cat_"+a+".png")
plt.show()

file = open('C:/Users/Carlos/Desktop/TFM/graficos/dest_dist/dest_dist_z.txt','w') 
file.write(str(z))
file.close()
file = open('C:/Users/Carlos/Desktop/TFM/graficos/dest_dist/dest_dist_x.txt','w') 
file.write(str(x))
file.close() 
file = open('C:/Users/Carlos/Desktop/TFM/graficos/dest_dist/dest_dist_y.txt','w') 
file.write(str(y))
file.close()

