import requests
from requests.auth import HTTPDigestAuth
import json
import urllib
import httplib
import pandas as pd
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np


cat=[u'es_barsandrestaurants', u'es_tech', u'es_fashion', u'es_leisure', u'es_transportation', u'es_health', u'es_auto', u'es_wellnessandbeauty', u'es_home', u'es_sportsandtoys', u'es_contents', u'es_otherservices', u'es_food']
for a in cat:
    qparams = {}
    parqparams = urllib.urlencode(qparams)

    conn = httplib.HTTPSConnection('apis.bbva.com')

    headers = {}
    headers["Accept-Language"] = "es"
    headers["Accept"] = "application/json"
    headers["Authorization"] = "jwt eyJ6aXAiOiJERUYiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TXWb-UTgi8aiX3xPfY_yud7ux5KPOun2w_A6vlORFIEnd2Jotk7_57JETaGp9NoJ6pkU-ks3LHoMhxccAWj5FuN3sagbsh1w4FzlK6OB2nF7MVdm5n-z4BneyQVs24Cu_hmN-3dPgJkVaf1tWCcDaFAOy2Npmi8fuy0UHEAyEF_yJzqHFdoi07ug5IxS77RmNjkN57AYLA-PBG5KWpimsEbmUuBRPqcSaL8076-8pvAqz4rtn2xeSI0-o0UAaAKYn3AReq0iZaO4JNNIM76PDo3-8sa1oDOELWi-p_8JDREHsXifPXE5b3oY9JfsytFylsEiXvVudzisTwLnc6nUrQ.j0J2KOkwbXFgvYtz.f84YRVvWmgzKiFjhBjdD0G0-OUxZlZmFM9t0lNmb0hKUYaEX3EAHMYt3C3A2-QFlNTCR-4kFMo2LJi1gO-2CfEyUEiLHqdBa0Ro4uEX_tLZ-bd_Ic_yYChjVPrGMrGic5w0cUyGCUR7lqMKwupEpdU3qUXt5YXs1TIr4A1rvLzDxWp1xxLLYHIIhf01cm_xVosvll42vDegmEO3tqi9i-ZylhL8Sr0xqkCZcb03IfZfodR_9IV_NKOMhmRyUwzQrGg.sYW6v60drhTWJS2nRI_e0A"

    conn.request('GET', '/paystats_sbx/4/zipcodes/28029/consumption_pattern?$group_by=day&category='+a+'&max_date=201512&min_date=201501', None, headers)
    #conn.request('GET', '/paystats_academic/3/info/merchants_categories?%s'%parqparams, None, headers)

    r = conn.getresponse()
    #data= r.read()
    data=json.loads(r.read())
    #print data
    print r.status, r.read(),data
    
    fecha=[]
    avg=[]
    cards=[]
    maxi=[]
    merch=[]
    mini=[]
    mode=[]
    std=[]
    txs=[]
    dia=[]
    hora=[]


    for i in range(len(data['data'])):
        #fecha.append(data['data'][i]['date'])
        if len(data['data'][i])>1:
            for l in range(len(data['data'][i]['days'])):
                for b in range(len(data['data'][i]['days'][l]['hours'])):
                    fecha.append(data['data'][i]['date'])
                    dia.append(data['data'][i]['days'][l]['day'])
                    hora.append(data['data'][i]['days'][l]['hours'][b]['hour'])
                    avg.append(data['data'][i]['days'][l]['hours'][b]['avg'])
                    cards.append(data['data'][i]['days'][l]['hours'][b]['cards'])
                    maxi.append(data['data'][i]['days'][l]['hours'][b]['max'])
                    merch.append(data['data'][i]['days'][l]['hours'][b]['merchants'])
                    mini.append(data['data'][i]['days'][l]['hours'][b]['min'])
                    mode.append(data['data'][i]['days'][l]['hours'][b]['mode'])
                    std.append(data['data'][i]['days'][l]['hours'][b]['std'])
                    txs.append(data['data'][i]['days'][l]['hours'][b]['txs'])
                
    d_cons = pd.DataFrame()
    d_cons['Fecha']=fecha
    d_cons['Dia']=dia
    d_cons['Hora']=hora
    d_cons['Compra Media']=avg
    d_cons['Nº Tarjetas']=cards
    d_cons['Maximo']=maxi
    d_cons['Establecimientos']=merch
    d_cons['Minimo']=mini
    d_cons['Mode']=mode
    d_cons['Std']=std
    d_cons['Txs']=txs
    d_cons['Venta Total']=d_cons['Compra Media']*d_cons['Txs']

    d_cons
    
    g_cons=d_cons.groupby(['Dia','Hora']).apply(sum)
    g_cons=g_cons.drop('Fecha',axis=1)
    g_cons=g_cons.drop('Dia',axis=1)
    g_cons=g_cons.drop('Hora',axis=1)
    #g_cons['Hora']
    #g_cons['Dia']
    g_cons
    
    frames = [g_cons.loc['monday'], g_cons.loc['tuesday'], g_cons.loc['wednesday'],g_cons.loc['thursday'],g_cons.loc['friday'],g_cons.loc['saturday'],g_cons.loc['sunday']]

    g_cons2 = pd.concat(frames)
    
    b=0
    c=0
    d=0
    n=0
    g_cons2['Dia']=''
    dias=['Lunes','Martes','Miercoles','Jueves','Viernes','Sabado','Domingo']
    for n in g_cons2.index.values:
        if c>n:
            b=b+1
        g_cons2['Dia'][d]=dias[b]
        d=d+1

        c=n

    g_cons2

    x=[]
    y=[]
    j=g_cons2['Dia']

    x = g_cons2.index.values

    # Creamos el array y conde cada punto es el seno de cada elemento de x
    y = g_cons2['Txs'].values
    y2 = g_cons2['Venta Total'].values

    z = pd.DataFrame()
    z1 = pd.DataFrame()
    #for a in unie:
    #    y.append(g_orig[g_orig['Categoria']==a].max()['Establecimientos'])
    #    x.append(a)



    z['Hora']=x
    z['Numero de Transacciones']=y
    z['Dia']=j.values
    print x
    print y
    print z
    z1['Venta Total']=y2
    z1['Hora']=x
    z1['Dia']=j.values


    #y = d_cat[d_cat['Categoria']==a]['Venta Total']
    #x = d_cat[d_cat['Categoria']==a]['Fecha']
    plt.plot(np.arange(len(x)), y)  # Dibujamos el gráfico de barras
    #plt.ylim(550,650)  # Limitamos los valores del eje y al range definido [450, 550]
    plt.title('Numero de Transacciones realizadas por Hora y Dia de la Semana')  # Colocamos el título
    plt.xticks(np.arange(len(x)), x, rotation = 90)  # Colocamos las etiquetas del eje x, en este caso, las fechas
    plt.xlabel(x,fontsize=2)
    plt.savefig('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/bas_txs'+a+'.png')
    plt.subplots_adjust(bottom=0.005)
    plt.show()


    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_txs_z'+a+'.txt','w') 
    file.write(str(z))
    file.close()
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_txs_x'+a+'.txt','w') 
    file.write(str(x))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_txs_y'+a+'.txt','w') 
    file.write(str(y))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_ven_y'+a+'.txt','w') 
    file.write(str(y2))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_ven_z'+a+'.txt','w') 
    file.write(str(z1))
    file.close()
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/con_ven_x'+a+'.txt','w') 
    file.write(str(x))
    file.close() 

    plt.plot(np.arange(len(x)), y2)  # Dibujamos el gráfico de barras
    #plt.ylim(550,650)  # Limitamos los valores del eje y al range definido [450, 550]
    plt.title('Ventas por Hora y Dia de la Semana')  # Colocamos el título
    plt.xticks(np.arange(len(x)), x, rotation = 90)  # Colocamos las etiquetas del eje x, en este caso, las fechas
    plt.xlabel(x,fontsize=2)
    plt.savefig('C:/Users/Carlos/Desktop/TFM/graficos/con_pat/bas_ven'+a+'.png')
    plt.subplots_adjust(bottom=0.005)
    plt.show()
