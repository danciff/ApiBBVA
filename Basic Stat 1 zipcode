import requests
from requests.auth import HTTPDigestAuth
import json
import urllib
import httplib
import pandas as pd
import matplotlib.pyplot as plt


cat=[u'es_barsandrestaurants', u'es_tech', u'es_fashion', u'es_leisure', u'es_transportation', u'es_health', u'es_auto', u'es_wellnessandbeauty', u'es_home', u'es_sportsandtoys', u'es_contents', u'es_otherservices', u'filtered', u'es_food']
for a in cat:
    qparams = {}
    parqparams = urllib.urlencode(qparams)

    conn = httplib.HTTPSConnection('apis.bbva.com')

    headers = {}
    headers["Accept-Language"] = "es"
    headers["Accept"] = "application/json"
    headers["Authorization"] = "jwt eyJ6aXAiOiJERUYiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.SMUfEYmiV1lj8gNG41nj2oDd_f_KQQCkvCaZ2lC8aqc-P24YkUkRidY7ZzNeEFq6EqbBmH0NUs4PabfVO1mpsM-2ES1MNqek8MKTwM--HITlxJNYIBRYVr1OiYxTv-6a0RalkBwO-gL71Kr1JrvjC06MQleojE_VpvViFulD6mJaJ3j2cXXKjvW-2V5W68wZDW0Q5hUmEYqN6nanHf6Y0hM3uOaA8ojvApyTMtPVDgelHaobHJ6rJN3V4v6npMaYpvDpsDBjRn-66Bff_LptM0_74Yk8gJpcNY-Sf4SCjIYLhWapNeE5AOhbG_6-WPbVx8e0N4BtTKL0NT60Rof7wg.XKensKpu8IK4yj4Y.ErBt1RV8KTXbkS22yD2qbMtE89HjFKCtJI-yeaN0fskSz_fOrmU0w9PnSdoRZIQZHF8C071gCDnZnqHL2VJtEd3OptcpWvz4aD1NtgX3HXit0oThUkfwcPdeDBDG24CssCfvOv9CsOCXMHdOoj6pnwSh8ov83EqAZadO9KEvW5MP7K2tiNlatp3osOo_jaNStGezHy49TwIoSXhn_JDRQhteVMZ8VWKaBGjKhzixB2pVrCfczy7M0OwMDomrS8w.72T5NkBjbH1U8vIuG5Rsgw"

    conn.request('GET', '/paystats_sbx/4/zipcodes/28029/basic_stats?category='+a+'&max_date=201512&min_date=201501', None, headers)
    #conn.request('GET', '/paystats_academic/3/info/merchants_categories?%s'%parqparams, None, headers)

    r = conn.getresponse()
    #data= r.read()
    data=json.loads(r.read())
    #print data
    print r.status, r.read(),data
    fecha=[]
    cat=[]
    cards=[]
    avg=[]
    merch=[]
    txs=[]
    maxi=[]
    mini=[]
    std=[]
    peak_txs_day=[]
    valley_txs_day=[]
    peak_txs_hour=[]
    valley_txs_hour=[]




    for i in range(len(data['data'])):
        if len(data['data'][i])>1:
            #fecha.append(data['data'][i]['date'])
            fecha.append(data['data'][i]['date'])
            avg.append(data['data'][i]['avg'])
            maxi.append(data['data'][i]['max'])
            mini.append(data['data'][i]['min'])
            std.append(data['data'][i]['std'])
            if data['data'][i]['peak_txs_day']==1:
                peak_txs_day.append('Domingo')
            elif data['data'][i]['peak_txs_day']==2:
                peak_txs_day.append('Lunes')
            elif data['data'][i]['peak_txs_day']==3:
                peak_txs_day.append('Martes')
            elif data['data'][i]['peak_txs_day']==4:
                peak_txs_day.append('Miercoles')
            elif data['data'][i]['peak_txs_day']==5:
                peak_txs_day.append('Jueves')
            elif data['data'][i]['peak_txs_day']==6:
                peak_txs_day.append('Viernes')
            else:
                peak_txs_day.append('Sabado')

            #peak_txs_day.append(data['data'][i]['peak_txs_day'])
            #valley_txs_day.append(data['data'][i]['valley_txs_day'])

            if data['data'][i]['valley_txs_day']==1:
                valley_txs_day.append('Domingo')
            elif data['data'][i]['peak_txs_day']==2:
                valley_txs_day.append('Lunes')
            elif data['data'][i]['peak_txs_day']==3:
                valley_txs_day.append('Martes')
            elif data['data'][i]['peak_txs_day']==4:
                valley_txs_day.append('Miercoles')
            elif data['data'][i]['peak_txs_day']==5:
                valley_txs_day.append('Jueves')
            elif data['data'][i]['peak_txs_day']==6:
                valley_txs_day.append('Viernes')
            else:
                valley_txs_day.append('Sabado')


            peak_txs_hour.append(data['data'][i]['peak_txs_hour'])
            valley_txs_hour.append(data['data'][i]['valley_txs_hour'])
            merch.append(data['data'][i]['merchants'])
            cards.append(data['data'][i]['cards'])
            txs.append(data['data'][i]['txs'])
        
    d_bas = pd.DataFrame()
    d_bas['Fecha']=fecha
    d_bas['Nº Tarjetas']=cards
    d_bas['Compra Media']=avg
    d_bas['Establecimientos']=merch
    d_bas['Txs']=txs
    d_bas['Maximo']=maxi
    d_bas['Minimo']=mini
    d_bas['Desviacion Tipica']=std
    d_bas['Dia max Transacciones']=peak_txs_day
    d_bas['Dia min Transacciones']=valley_txs_day
    d_bas['Hora max Transacciones']=peak_txs_hour
    d_bas['Hora min Transacciones']=valley_txs_hour
    d_bas['Venta Total']=d_bas['Compra Media']*d_bas['Txs']
    d_bas
        
    d_bas['Fecha'] = d_bas['Fecha'].astype(int)
    
    
    import pandas as pd
    import numpy as np

    x=[]
    y=[]


    x = d_bas['Fecha'].values

    # Creamos el array y conde cada punto es el seno de cada elemento de x
    y = d_bas['Maximo'].values


    z = pd.DataFrame()
    #for a in unie:
    #    y.append(g_orig[g_orig['Categoria']==a].max()['Establecimientos'])
    #    x.append(a)

    
    
    z['Fecha']=x
    z['Venta Maxima']=y
    print x
    print y
    print z


    #y = d_cat[d_cat['Categoria']==a]['Venta Total']
    #x = d_cat[d_cat['Categoria']==a]['Fecha']
    plt.bar(np.arange(len(x)), y)  # Dibujamos el gráfico de barras
    #plt.ylim(550,650)  # Limitamos los valores del eje y al range definido [450, 550]
    plt.title('Venta Maxima por Mes '+a)  # Colocamos el título
    plt.xticks(np.arange(len(x)), x, rotation = 90)  # Colocamos las etiquetas del eje x, en este caso, las fechas
    plt.savefig('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_max_'+a+'.png')
    plt.show()


    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_max_z_'+a+'.txt','w') 
    file.write(str(z))
    file.close()
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_max_x_'+a+'.txt','w') 
    file.write(str(x))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_max_y_'+a+'.txt','w') 
    file.write(str(y))
    file.close() 
    
    
    x1=[]

    y2=[]
    y3=[]
    y4=[]
    y5=[]
    y6=[]


    x1=d_bas['Fecha']




    y2=d_bas['Desviacion Tipica']
    y3=d_bas['Dia max Transacciones']
    y4=d_bas['Dia min Transacciones']
    y5=d_bas['Hora max Transacciones']
    y6=d_bas['Hora min Transacciones']

    z['Fecha']=x1
    z['Dia max Transacciones']=y3
    z['Dia min Transacciones']=y4
    z['Hora max Transacciones']=y5
    z['Hora min Transacciones']=y6
    z['Desviacion Tipica']=y2

    print x
    print y
    print z

    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_z_'+a+'.txt','w') 
    file.write(str(z))
    file.close()
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_x_'+a+'.txt','w') 
    file.write(str(x))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_dmax_y_'+a+'.txt','w') 
    file.write(str(y3))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_dmin_y_'+a+'.txt','w') 
    file.write(str(y4))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_hmax_y_'+a+'.txt','w') 
    file.write(str(y5))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_hmin_y_'+a+'.txt','w') 
    file.write(str(y6))
    file.close() 
    file = open('C:/Users/Carlos/Desktop/TFM/graficos/bas_sta/bas_std_y_'+a+'.txt','w') 
    file.write(str(y2))
    file.close() 
